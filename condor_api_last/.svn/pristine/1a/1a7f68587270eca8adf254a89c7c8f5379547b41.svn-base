using CondorExtreme3_UI.Helper;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace CondorExtreme3_UI.Employees
{
    public partial class SystemRolesForm : Form
    {
        public WebAPIHelper Service { get; set; }

        public int EmployeeID { get; set; }
        public string Username { get; set; }
        public SystemRolesForm(int EmployeeID, string Username)
        {
            InitializeComponent();
            Service = new WebAPIHelper(WebAPIHelper.ApiUri, "api/Employees");
            this.EmployeeID = EmployeeID;  
            this.Username = Username;
            lblCurrentUsername.Text = Username;
            LoadEmployeeRoles();
        }
      
        void LoadEmployeeRoles()
        {
            HttpResponseMessage ResponseRoles = Service.GetResponse("GetEmployeeRoles", EmployeeID);
            if (ResponseRoles.IsSuccessStatusCode)
            {
                var ResultRoles = ResponseRoles.Content.ReadAsAsync<List<EmployeeRoles>>().Result;
                grdEmployeeRoles.DataSource = ResultRoles;
                grdEmployeeRoles.Columns["EmployeeID"].Visible = false;
                grdEmployeeRoles.Columns["RoleID"].Visible = false;
                grdEmployeeRoles.Columns["RoleName"].HeaderText = "System Role";
                grdEmployeeRoles.Columns["RoleName"].Width = 200;
            }
        }

        private void btnAddRole_Click(object sender, EventArgs e)
        {
            SystemRolesAddForm systemRolesAddForm = new SystemRolesAddForm(EmployeeID,Username);
            DialogResult dialogResult= systemRolesAddForm.ShowDialog();

            if (dialogResult == DialogResult.OK)
                LoadEmployeeRoles();
        }

        private void btnRemoveRole_Click(object sender, EventArgs e)
        {
            if(grdEmployeeRoles.Rows.Count==0)
            {
                MessageBox.Show(Messages.EmployeeRoleSelectedNull, "Warning", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            int RoleID=(int)grdEmployeeRoles.SelectedRows[0].Cells["RoleID"].Value;


            DialogResult dialogResult = MessageBox.Show("Are you sure you want to delete this employee role?", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Warning);

            if (dialogResult == DialogResult.Yes)
            {
                dynamic emprole = new
                {
                    RoleID = RoleID,
                    EmployeeID = this.EmployeeID
                };
                
                HttpResponseMessage rmvResponse = Service.PutResponse(emprole, "RemoveEmployeeRoles");
                if (rmvResponse.IsSuccessStatusCode)
                {
                    MessageBox.Show(Messages.EmployeeRoleRemoveSuccess, "Info", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    LoadEmployeeRoles();
                }
                else
                    MessageBox.Show(Messages.EmployeeRoleRemoveFailure, "Warning", MessageBoxButtons.OK, MessageBoxIcon.Warning);
           
            }

        }
    }


}
